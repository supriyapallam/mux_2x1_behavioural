//Design Code
module mux21(output reg out,input s1,in0,in1);
always@*
  begin
    if({s1,in0,in1}==3'b000)
      begin
        out=1'b0;
      end
    else if({s1,in0,in1}==3'b001)
      begin
        out=1'b0;
      end
    else if({s1,in0,in1}==3'b010)
      begin
        out=1'b1;
      end
    else if({s1,in0,in1}==3'b011)
      begin
        out=1'b1;
      end
    else if({s1,in0,in1}==3'b100)
      begin
        out=1'b0;
      end
    else if({s1,in0,in1}==3'b101)
      begin
        out=1'b1;
      end
    else if({s1,in0,in1}==3'b110)
      begin
        out=1'b0;
      end
    else if({s1,in0,in1}==3'b111)
      begin
        out=1'b1;
      end
    else
      begin
        out=1'bx;
      end
  end
endmodule

//Test Bench Code
module test();
  reg s1,in0,in1;
  wire out;
  integer i;
  mux21 DUT(out,s1,in0,in1);
  initial
    begin
      for(i=0;i<8;i=i+1)
        begin
          {s1,in0,in1}=i;
          #10;
        end
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
  initial
    begin
      $monitor("s1=%b,in0=%b,in1=%b,out=%b",s1,in0,in1,out);
    end
endmodule

        

        

    
